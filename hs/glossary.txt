abi: application binary interface
al: argument list
alt: argument list transformed
amt: amount
app: application
at: at (type: SrcLoc)
bc: byte code
bl: backend language
bt: BaseType
c: common
c: contract
cb: contract balance
cbi: contract balance index
cbr: common backend representation
ce: CompileErr
clo: closure
cnp: ConsensusNetworkProgram
com: common
comp: comparison
comp: compiler
con: connector
con: constant
con: constructor
cons: consensus
cp: contract primitive
ct: ClaimType
ctc: contract
cto: CompilerToolOpts
ctxt: context
def: definition
dest: destination
dir: directory
e: endpoint
e: expression
ebc: ethereum byte code
eff: Effect
env: environment
ep: end-point
epp: end-point projection
eq: equal
err: error
et: ETail (e=epp)
exp: experimental
expr: expression
ext: extension
fp: FilePath
fs: FromSpec
fv: free variable
gt: greater than
gte: greater than or equal
h: handle
hP: ProcessHandle
herr: Handle ~stderr 
hout: Handle ~stdout
il: intermediate language
info: information
ior: inclusive or
iv: inline variable
k: continuation (the thing to call after this is done)
kgq: knowledge graph query
l: Language
lab: label
loc: location
lsh: left shift (<<)
lt: LType
lt: less than
lte: less than or equal
msg: message
mtime: maybe timeout
opts: options
orig: original
p: pretty (when used as suffix) (type = Doc a)
p: prim op (as in PLE, PEQ, etc)
p: variable ?
pf: FilePath
pie: participant interaction environment
prim: primitive
pro: projection
prog: program
r: role
res: result
ret: return
rps: rock paper scissors
rsh: right shift (>>)
s: statement
sco: scope
sl: static language
slc: static language context
sls: Static Language (w/ Security level)
slv: static language value
src: source
stdlib: standard library
t: tail (when used as suffix)
t: transformed (when used as suffix) (type ~= z3 SExp)
tbc: teal byte code
tc: to consensus
tn: transaction number
ttt: tick tack toe
txn: transaction
v: variable
var: variable
xil: eXpanded Inlined Language (the lang after xl)
xl: eXpanded Language
xlt: XLType
xor: eXclusive or
γ: type environment
σ: binding environment
